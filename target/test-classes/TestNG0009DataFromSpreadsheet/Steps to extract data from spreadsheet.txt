Beginer Steps At Project Level
1. Create package in src/main/java named as - Utility.
2. Create a package in src/test/java named anything. 
3. Create a class in src/test/java named anything.

Steps to Integrate Spreadsheet in Project
1. Include Spreadsheetreader class in src/main/java given in Utility package.
2. Now, to resolve the errors include dependencies in pom.xml file

<dependency>
	<groupId>com.google.api-client</groupId>
	<artifactId>google-api-client</artifactId>
	<version>1.23.0</version>
</dependency>

<dependency>
	<groupId>com.google.apis</groupId>
	<artifactId>google-api-services-sheets</artifactId>
	<version>v4-rev513-1.23.0</version>
</dependency>

<dependency>
	<groupId>com.google.oauth-client</groupId>
	<artifactId>google-oauth-client-jetty</artifactId>
	<version>1.23.0</version>
</dependency>

Note -  In case, dependencies not supporting then visit to maven central repo and download the version according to the project requirements.


3. Now, create google spreadsheet in your google drive and change its sharing permission to 'anyone'.
4. Now, get ID of spreadsheet. For e.g.
URL of spreadsheet is - https://docs.google.com/spreadsheets/d/1SBXxbgIYg8dC9cj3WuMB3IjCY15lp-SZMVtyKFQArNs/edit#gid=927544358

So, id is - 1SBXxbgIYg8dC9cj3WuMB3IjCY15lp-SZMVtyKFQArNs i.e. starts after 'd/' and ends at '/edit'

5. Now, copy your respective spreadsheet id -> Go to src/main/java -> Utility -> Spreadsheetreader.java and replace it in string variable. For e.g.

Previous ID
public static final String SPREADSHEET_ID="17i16VrN70rXvK6UhVNRo-n7AyrJc2LBBX4h_QF4tqs0";

Remove previous ID and replace your ID
New ID
public static final String SPREADSHEET_ID="1SBXxbgIYg8dC9cj3WuMB3IjCY15lp-SZMVtyKFQArNs";


6. Add client_secret.json file in your project root folder. It is given in root folder. Anyone can directly copy that file and include in your project. 
For more information you can visit - https://developers.google.com/api-client-library/dotnet/guide/aaa_client_secrets


Steps to fetch data
1. Create a class. For e.g. FetchDataFromSpreadSheet
Write the following code -
public class FetchDataFromSpreadSheet {
	
	//Create object for spreadsheetreader class
	public static SpreadsheetReader readSpreadSheet = new SpreadsheetReader();
	
	//Spreadsheet Rows and columns works as a List, so we need to declare values as List.
	static List<List<Object>> values = null;
	
	@Test
	public void readData() throws Exception {
		
		//We need to give the SheetName to fetch values
		values = SpreadsheetReader.readSpreadSheet("Scenario");
		
		//Printing value having index 2nd row and 1st column. Always index starts from 0.
		System.out.println(values.get(2).get(1).toString());
	}

}


2. Now, Run the program as TestNG.

3. First time, system asks to authenticate your credentials. So, follow the following steps ->
Run as TestNG -> Browser gets open -> Select your credentials -> Click on link "Advanced" link -> Click on "Go to One20 Google Sheet Read (unsafe)" -> Finally click on Allow button.

You can get following message - "Received verification code. You may now close this window."

Now, go to your code again and run your code. This fetches the value.

Note - Its the one time process on each system. If you changes your system or delete .credentials folder then, you need to follow the "Allow" process again i.e. need to give permission again.

.credentials in which your information stored have the following path in windows desktop - C:\Users\YourName\.credentials


You can try the following scenarios for more clarification - 
1. Remove client_secret.json and run the code. It gives an error.
2. Change spreadsheet permission to public and private. In private mode it gives an error.
3. Remove ".credentials" folder. In this case, again permission window gets open.