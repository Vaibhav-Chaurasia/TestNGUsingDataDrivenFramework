<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="2" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-26T14:09:45Z" name="Suite" finished-at="2022-08-26T14:10:51Z" duration-ms="66062">
    <groups>
    </groups>
    <test started-at="2022-08-26T14:09:45Z" name="LoginTestCases" finished-at="2022-08-26T14:10:07Z" duration-ms="21964">
      <class name="TestNG0018FrameworkIntegration.TestCaseLogin">
        <test-method is-config="true" signature="testBaseSetup()[pri:0, instance:TestNG0018FrameworkIntegration.TestCaseLogin@7e4204e2]" started-at="2022-08-26T14:09:45Z" name="testBaseSetup" finished-at="2022-08-26T14:09:52Z" duration-ms="7109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBaseSetup -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestNG0018FrameworkIntegration.TestCaseLogin@7e4204e2]" started-at="2022-08-26T14:09:52Z" name="setUp" finished-at="2022-08-26T14:09:53Z" depends-on-methods="TestNG0018FrameworkIntegration.BaseClass.testBaseSetup" duration-ms="628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="requiredFieldValidation()[pri:1, instance:TestNG0018FrameworkIntegration.TestCaseLogin@7e4204e2]" started-at="2022-08-26T14:09:53Z" name="requiredFieldValidation" finished-at="2022-08-26T14:09:59Z" duration-ms="6340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requiredFieldValidation -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNG0018FrameworkIntegration.TestCaseLogin@7e4204e2]" started-at="2022-08-26T14:09:59Z" name="getResult" finished-at="2022-08-26T14:09:59Z" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=requiredFieldValidation status=SUCCESS method=TestCaseLogin.requiredFieldValidation()[pri:1, instance:TestNG0018FrameworkIntegration.TestCaseLogin@7e4204e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="enterIncorrectFormat()[pri:2, instance:TestNG0018FrameworkIntegration.TestCaseLogin@7e4204e2]" started-at="2022-08-26T14:09:59Z" name="enterIncorrectFormat" finished-at="2022-08-26T14:10:06Z" duration-ms="6450" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Invalid email addres] but found [Invalid email address]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Invalid email addres] but found [Invalid email address]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at TestNG0018FrameworkIntegration.TestCaseLogin.enterIncorrectFormat(TestCaseLogin.java:67)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterIncorrectFormat -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNG0018FrameworkIntegration.TestCaseLogin@7e4204e2]" started-at="2022-08-26T14:10:06Z" name="getResult" finished-at="2022-08-26T14:10:06Z" duration-ms="103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterIncorrectFormat status=FAILURE method=TestCaseLogin.enterIncorrectFormat()[pri:2, instance:TestNG0018FrameworkIntegration.TestCaseLogin@7e4204e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="quitDriver()[pri:0, instance:TestNG0018FrameworkIntegration.TestCaseLogin@7e4204e2]" started-at="2022-08-26T14:10:06Z" name="quitDriver" finished-at="2022-08-26T14:10:07Z" duration-ms="1301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitDriver -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestNG0018FrameworkIntegration.TestCaseLogin@7e4204e2]" started-at="2022-08-26T14:10:07Z" name="tearDown" finished-at="2022-08-26T14:10:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestNG0018FrameworkIntegration.TestCaseLogin -->
    </test> <!-- LoginTestCases -->
    <test started-at="2022-08-26T14:10:07Z" name="RegistrationTestCases" finished-at="2022-08-26T14:10:51Z" duration-ms="44080">
      <class name="TestNG0018FrameworkIntegration.TestCaseSignUp">
        <test-method is-config="true" signature="startReport()[pri:0, instance:TestNG0018FrameworkIntegration.TestCaseSignUp@4b6e2263]" started-at="2022-08-26T14:09:29Z" name="startReport" finished-at="2022-08-26T14:09:45Z" duration-ms="16210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method is-config="true" signature="testBaseSetup()[pri:0, instance:TestNG0018FrameworkIntegration.TestCaseSignUp@4b6e2263]" started-at="2022-08-26T14:10:07Z" name="testBaseSetup" finished-at="2022-08-26T14:10:14Z" duration-ms="6406" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBaseSetup -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestNG0018FrameworkIntegration.TestCaseSignUp@4b6e2263]" started-at="2022-08-26T14:10:14Z" name="setUp" finished-at="2022-08-26T14:10:14Z" depends-on-methods="TestNG0018FrameworkIntegration.BaseClass.testBaseSetup" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyValidationMessageOnBlankFields()[pri:1, instance:TestNG0018FrameworkIntegration.TestCaseSignUp@4b6e2263]" started-at="2022-08-26T14:10:14Z" name="verifyValidationMessageOnBlankFields" finished-at="2022-08-26T14:10:26Z" duration-ms="12563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidationMessageOnBlankFields -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNG0018FrameworkIntegration.TestCaseSignUp@4b6e2263]" started-at="2022-08-26T14:10:26Z" name="getResult" finished-at="2022-08-26T14:10:26Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyValidationMessageOnBlankFields status=SUCCESS method=TestCaseSignUp.verifyValidationMessageOnBlankFields()[pri:1, instance:TestNG0018FrameworkIntegration.TestCaseSignUp@4b6e2263] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="enterIncorrectFormat()[pri:2, instance:TestNG0018FrameworkIntegration.TestCaseSignUp@4b6e2263]" started-at="2022-08-26T14:10:26Z" name="enterIncorrectFormat" finished-at="2022-08-26T14:10:51Z" duration-ms="24258" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at TestNG0018FrameworkIntegration.TestCaseSignUp.enterIncorrectFormat(TestCaseSignUp.java:48)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterIncorrectFormat -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNG0018FrameworkIntegration.TestCaseSignUp@4b6e2263]" started-at="2022-08-26T14:10:51Z" name="getResult" finished-at="2022-08-26T14:10:51Z" duration-ms="120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterIncorrectFormat status=FAILURE method=TestCaseSignUp.enterIncorrectFormat()[pri:2, instance:TestNG0018FrameworkIntegration.TestCaseSignUp@4b6e2263] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="quitDriver()[pri:0, instance:TestNG0018FrameworkIntegration.TestCaseSignUp@4b6e2263]" started-at="2022-08-26T14:10:51Z" name="quitDriver" finished-at="2022-08-26T14:10:51Z" duration-ms="721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitDriver -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestNG0018FrameworkIntegration.TestCaseSignUp@4b6e2263]" started-at="2022-08-26T14:10:51Z" name="tearDown" finished-at="2022-08-26T14:10:51Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:TestNG0018FrameworkIntegration.TestCaseSignUp@4b6e2263]" started-at="2022-08-26T14:10:51Z" name="teardown" finished-at="2022-08-26T14:10:52Z" duration-ms="226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- TestNG0018FrameworkIntegration.TestCaseSignUp -->
    </test> <!-- RegistrationTestCases -->
  </suite> <!-- Suite -->
</testng-results>
