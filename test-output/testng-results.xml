<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="1" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-24T12:12:04Z" name="Default suite" finished-at="2022-08-24T12:12:06Z" duration-ms="1184">
    <groups>
    </groups>
    <test started-at="2022-08-24T12:12:04Z" name="Default test" finished-at="2022-08-24T12:12:06Z" duration-ms="1184">
      <class name="TestNG0017ExtentReport.ExtentReportGeneration">
        <test-method is-config="true" signature="startReport()[pri:0, instance:TestNG0017ExtentReport.ExtentReportGeneration@63611043]" started-at="2022-08-24T12:12:04Z" name="startReport" finished-at="2022-08-24T12:12:05Z" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method signature="test_1()[pri:0, instance:TestNG0017ExtentReport.ExtentReportGeneration@63611043]" started-at="2022-08-24T12:12:05Z" name="test_1" finished-at="2022-08-24T12:12:05Z" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNG0017ExtentReport.ExtentReportGeneration@63611043]" started-at="2022-08-24T12:12:05Z" name="getResult" finished-at="2022-08-24T12:12:05Z" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_1 status=SUCCESS method=ExtentReportGeneration.test_1()[pri:0, instance:TestNG0017ExtentReport.ExtentReportGeneration@63611043] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="test_2()[pri:0, instance:TestNG0017ExtentReport.ExtentReportGeneration@63611043]" started-at="2022-08-24T12:12:05Z" name="test_2" finished-at="2022-08-24T12:12:05Z" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at TestNG0017ExtentReport.ExtentReportGeneration.test_2(ExtentReportGeneration.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNG0017ExtentReport.ExtentReportGeneration@63611043]" started-at="2022-08-24T12:12:05Z" name="getResult" finished-at="2022-08-24T12:12:05Z" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_2 status=FAILURE method=ExtentReportGeneration.test_2()[pri:0, instance:TestNG0017ExtentReport.ExtentReportGeneration@63611043] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="test_3()[pri:0, instance:TestNG0017ExtentReport.ExtentReportGeneration@63611043]" started-at="2022-08-24T12:12:05Z" name="test_3" finished-at="2022-08-24T12:12:05Z" duration-ms="2" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[The test has been skipped]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: The test has been skipped
at TestNG0017ExtentReport.ExtentReportGeneration.test_3(ExtentReportGeneration.java:59)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_3 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNG0017ExtentReport.ExtentReportGeneration@63611043]" started-at="2022-08-24T12:12:05Z" name="getResult" finished-at="2022-08-24T12:12:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_3 status=SKIP method=ExtentReportGeneration.test_3()[pri:0, instance:TestNG0017ExtentReport.ExtentReportGeneration@63611043] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestNG0017ExtentReport.ExtentReportGeneration@63611043]" started-at="2022-08-24T12:12:05Z" name="tearDown" finished-at="2022-08-24T12:12:06Z" duration-ms="598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestNG0017ExtentReport.ExtentReportGeneration -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
